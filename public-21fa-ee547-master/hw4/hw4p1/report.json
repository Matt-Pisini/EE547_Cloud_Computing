{"_presentation":"semantic","stats":{"suites":33,"tests":85,"passes":9,"pending":0,"failures":76,"start":"2021-10-18T04:29:23.505Z","end":"2021-10-18T04:29:43.686Z","duration":20181},"stats_group":{"failures":6,"passes":0},"stages":["Summary","Groups","POST /match","POST /match/:mid/award/:pid","POST /match/:mid/end","POST /match/:mid/disqualify/:pid","GET /match","GET /match/:mid"],"Summary":{"Duration (ms)":20181,"Tests passed":9,"Tests failed":76},"Groups":{"POST /match":{"passed":false},"POST /match/:mid/award/:pid":{"passed":false},"POST /match/:mid/end":{"passed":false},"POST /match/:mid/disqualify/:pid":{"passed":false},"GET /match":{"passed":false},"GET /match/:mid":{"passed":false}},"POST /match":{"POST /match active players response_code is 303 on success":{"passed":false},"POST /match active players response_code 402 insufficient balance":{"passed":false},"POST /match active players players in match":{"passed":false},"POST /match active players entry reduces balance_usd":{"passed":false},"POST /match active players response_code 404 if player does not exist":{"passed":true},"POST /match active players response_code 409 if player in active match":{"passed":false},"POST /match prize_usd set if valid, two precision digit":{"passed":false},"POST /match prize_usd set if valid, one precision digit":{"passed":false},"POST /match prize_usd set if valid, zero precision digit with decimal":{"passed":false},"POST /match prize_usd set if valid, zero precision digit":{"passed":false},"POST /match prize_usd fail if invalid":{"passed":false},"POST /match entry_fee_usd set if valid, two precision digit":{"passed":false},"POST /match entry_fee_usd set if valid, one precision digit":{"passed":false},"POST /match entry_fee_usd set if valid, zero precision digit with decimal":{"passed":false},"POST /match entry_fee_usd set if valid, zero precision digit":{"passed":false},"POST /match entry_fee_usd fail if invalid":{"passed":false}},"POST /match/:mid/award/:pid":{"POST /match/:mid/award/:pid active match, active player, valid points response code is 200":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points responds with correct match":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points response is match model":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points increment from zero points":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points award points > 1":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points increment from non-zero points":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points sequential calls":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points increment player2 points":{"passed":false},"POST /match/:mid/award/:pid active match, active player, valid points increment both points":{"passed":false},"POST /match/:mid/award/:pid invalid points points must be (strictly) positive":{"passed":false},"POST /match/:mid/award/:pid invalid points empty points":{"passed":false},"POST /match/:mid/award/:pid invalid points points must be an integer":{"passed":false},"POST /match/:mid/award/:pid invalid points invalid points":{"passed":false},"POST /match/:mid/award/:pid invalid player player does not exist":{"passed":true},"POST /match/:mid/award/:pid invalid player player is not in match":{"passed":false},"POST /match/:mid/award/:pid invalid match match does not exist":{"passed":true},"POST /match/:mid/award/:pid invalid match match is not active":{"passed":false}},"POST /match/:mid/end":{"POST /match/:mid/end active match, active player response code is 200":{"passed":false},"POST /match/:mid/end active match, active player responds with correct match":{"passed":false},"POST /match/:mid/end active match, active player response is match model":{"passed":false},"POST /match/:mid/end active match, active player sets ended_at":{"passed":false},"POST /match/:mid/end active match, active player award prize to win player":{"passed":false},"POST /match/:mid/end active match, active player no prize to lose player":{"passed":false},"POST /match/:mid/end not active match match is not active":{"passed":false},"POST /match/:mid/end not active match match does not exist":{"passed":true},"POST /match/:mid/end not active match cannot end tied (at zero) match":{"passed":false},"POST /match/:mid/end not active match cannot end tied (at non-zero) match":{"passed":false}},"POST /match/:mid/disqualify/:pid":{"POST /match/:mid/disqualify/:pid active match, active player response code is 200":{"passed":false},"POST /match/:mid/disqualify/:pid active match, active player responds with correct match":{"passed":false},"POST /match/:mid/disqualify/:pid active match, active player response is match model":{"passed":false},"POST /match/:mid/disqualify/:pid active match, active player sets ended_at":{"passed":false},"POST /match/:mid/disqualify/:pid active match, active player award prize to win player":{"passed":false},"POST /match/:mid/disqualify/:pid active match, active player no prize to lose player":{"passed":false},"POST /match/:mid/disqualify/:pid not active match match is not active":{"passed":false},"POST /match/:mid/disqualify/:pid not active match match does not exist":{"passed":true},"POST /match/:mid/disqualify/:pid invalid player player does not exist":{"passed":true},"POST /match/:mid/disqualify/:pid invalid player player is not in match":{"passed":false}},"GET /match":{"GET /match contains 0 match response code is 200":{"passed":true},"GET /match contains 0 match response is empty array":{"passed":true},"GET /match contains 1 match response code is 200":{"passed":false},"GET /match contains 1 match response is array length 1":{"passed":false},"GET /match contains 2+ match response code is 200":{"passed":false},"GET /match contains 2+ match response is array length 2":{"passed":false},"GET /match sort match active, prize_usd DESC":{"passed":false},"GET /match sort match at most 4 not-active":{"passed":false},"GET /match sort match active before not-active":{"passed":false}},"GET /match/:mid":{"GET /match/:mid mid exist response code is 200":{"passed":false},"GET /match/:mid mid exist response is valid match":{"passed":false},"GET /match/:mid mid not exist response code is 404":{"passed":true},"GET /match/:mid mid response contains mid":{"passed":false},"GET /match/:mid mid mid is ObjectId":{"passed":false},"GET /match/:mid mid id response contains ids":{"passed":false},"GET /match/:mid mid id ids match player":{"passed":false},"GET /match/:mid mid name response contains names":{"passed":false},"GET /match/:mid mid name names match player":{"passed":false},"GET /match/:mid mid is_active response contains is_active":{"passed":false},"GET /match/:mid mid is_active is_active is boolean":{"passed":false},"GET /match/:mid mid prize_usd response contains prize_usd":{"passed":false},"GET /match/:mid mid prize_usd total_prize is currency":{"passed":false},"GET /match/:mid mid points response contains points":{"passed":false},"GET /match/:mid mid points points is int":{"passed":false},"GET /match/:mid mid winner_pid response contains winner_pid":{"passed":false},"GET /match/:mid mid winner_pid (active) winner_pid is null":{"passed":false},"GET /match/:mid mid winner_pid (complete) winner_pid is ObjectId":{"passed":false},"GET /match/:mid ended_at response contains ended_at":{"passed":false},"GET /match/:mid ended_at (active) ended_at is null":{"passed":false},"GET /match/:mid ended_at (complete) ended_at is datetime string":{"passed":false},"GET /match/:mid age response contains age":{"passed":false},"GET /match/:mid age age is int":{"passed":false}}}